<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.acme.greeting.api.model</groupId>
	<artifactId>acme-api-greeting-model</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>acme-api-greeting-model</name>
	<description></description>


	<properties>

		<!-- Compiler & Resources -->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<!-- Architecture libraries -->
		<acme-architecture-testing.version>0.0.1-SNAPSHOT</acme-architecture-testing.version>

		<!-- Dependency Versions -->
		<spring-boot-starter-validation.version>2.3.4.RELEASE</spring-boot-starter-validation.version>
		<lombok.version>1.18.12</lombok.version>
		<jackson.version>2.11.2</jackson.version>

		<!-- Plugins -->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
		<jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>

	</properties>


	<dependencies>

		<!-- *** Architecture Libraries *** -->
		
		<!-- acme-architecture-testing : Custom Testing Library
			Include : 
				* spring-boot-starter-test
				* archunit + custom rules
		-->
		
		<dependency>
			<groupId>com.acme.architecture.testing</groupId>
			<artifactId>acme-architecture-testing</artifactId>
			<version>${acme-architecture-testing.version}</version>
			<scope>test</scope>
		</dependency>


		<!-- *** Modules *** -->


		<!-- *** Third Party Libraries *** -->

		<!-- lombok : Java Tool for automatic generation of getters, setters, equals, 
			hashCode, toString, more -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>

		<!-- jackson-core : processing abstractions (aka Streaming API), implementation 
			for JSON -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<version>${spring-boot-starter-validation.version}</version>
		</dependency>


	</dependencies>

	<build>
		<finalName>acme-api-greeting-model</finalName>
		<plugins>

			<!-- maven-compiler-plugin : Plugin used to compile the project source -->
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- maven-resources-plugin : Plugin used to handle the project resources -->
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<!-- maven-surefire-plugin : Plugin used to run unit tests - Generate reports in the directory target/surefire-reports -->
			
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skipTests>${skip.unit.tests}</skipTests>
					<testFailureIgnore>false</testFailureIgnore>
					<properties>
						<configurationParameters>
							junit.jupiter.execution.parallel.enabled=true
							junit.jupiter.execution.parallel.config.dynamic.factor=2
							junit.platform.output.capture.stdout=true
							junit.platform.output.capture.stderr=true
						</configurationParameters>
					</properties>
				</configuration>
			</plugin>
			
			<!-- maven-failsafe-plugin : Plugin used to run integration tests - Generate reports in the directory target/failsafe-reports -->
			
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<skipITs>${skip.integration.tests}</skipITs>
					<includes>
						<include>**/*TestIT</include>
						<include>**/*TestITCase</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>default-integration-test</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- jacoco-maven-plugin : Plugin used to generate code coverage -->
			 
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/*com/**/mapper/**</exclude>
						<exclude>**/*com/**/mapper/impl/**</exclude>
						<exclude>**/*com/**/mapper/struct/**</exclude>
						<exclude>**/*com/**/mapper/**/struct/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>coverage-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>target/jacoco-reports</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			

			<!-- maven-deploy-plugin : Plugin used during the deploy phase -->
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
